{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alan/hackathon/fin-assist/src/lib/agent.ts"],"sourcesContent":["import { google } from \"@ai-sdk/google\";\r\n\r\nexport type AgentRequest = {\r\n  systemPrompt?: string;\r\n  userText: string;\r\n};\r\n\r\nexport type AgentResponse = {\r\n  text: string;\r\n};\r\n\r\nconst defaultSystem =\r\n  \"You are a helpful, concise voice assistant for financial guidance. Keep responses short and speak-friendly.\";\r\n\r\nexport async function runAgent(\r\n  req: AgentRequest\r\n): Promise<AgentResponse> {\r\n  const model = google(\"gemini-2.5-flash\");\r\n\r\n  const result = await model.generate({\r\n    system: req.systemPrompt ?? defaultSystem,\r\n    prompt: req.userText,\r\n  });\r\n\r\n  return { text: result.text };\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,gBACJ;AAEK,eAAe,SACpB,GAAiB;IAEjB,MAAM,QAAQ,IAAA,0PAAM,EAAC;IAErB,MAAM,SAAS,MAAM,MAAM,QAAQ,CAAC;QAClC,QAAQ,IAAI,YAAY,IAAI;QAC5B,QAAQ,IAAI,QAAQ;IACtB;IAEA,OAAO;QAAE,MAAM,OAAO,IAAI;IAAC;AAC7B","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alan/hackathon/fin-assist/src/lib/transcription.ts"],"sourcesContent":["export async function transcribeAudio(\r\n  audioArrayBuffer: ArrayBuffer,\r\n  mimeType: string\r\n): Promise<{ text: string }> {\r\n  // For now, return a placeholder since we don't have Google Cloud Speech API configured\r\n  // In a real implementation, this would use Google Cloud Speech-to-Text\r\n  return { text: \"Audio transcription not yet implemented\" };\r\n}"],"names":[],"mappings":";;;;AAAO,eAAe,gBACpB,gBAA6B,EAC7B,QAAgB;IAEhB,uFAAuF;IACvF,uEAAuE;IACvE,OAAO;QAAE,MAAM;IAA0C;AAC3D","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alan/hackathon/fin-assist/src/lib/tts.ts"],"sourcesContent":["import { elevenlabs } from \"@ai-sdk/elevenlabs\";\r\n\r\nexport type TTSRequest = {\r\n  text: string;\r\n  voiceId: string; // e.g. Rachel's voice id\r\n  modelId?: string; // e.g. \"eleven_multilingual_v2\"\r\n  format?: \"mp3\" | \"wav\" | \"pcm\";\r\n};\r\n\r\nexport type TTSResult = {\r\n  audio: Uint8Array; // raw audio bytes\r\n  contentType: string;\r\n};\r\n\r\nexport async function synthesizeSpeech({\r\n  text,\r\n  voiceId,\r\n  modelId = \"eleven_multilingual_v2\",\r\n  format = \"mp3\",\r\n}: TTSRequest): Promise<TTSResult> {\r\n  const audioModel = elevenlabs.audio(\"text-to-speech\");\r\n\r\n  const result = await audioModel.generate({\r\n    voice: voiceId,\r\n    format,\r\n    model: modelId,\r\n    text,\r\n  });\r\n\r\n  return { audio: result.audio, contentType: result.mimeType };\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAAA;;AAcO,eAAe,iBAAiB,EACrC,IAAI,EACJ,OAAO,EACP,UAAU,wBAAwB,EAClC,SAAS,KAAK,EACH;IACX,MAAM,aAAa,sQAAU,CAAC,KAAK,CAAC;IAEpC,MAAM,SAAS,MAAM,WAAW,QAAQ,CAAC;QACvC,OAAO;QACP;QACA,OAAO;QACP;IACF;IAEA,OAAO;QAAE,OAAO,OAAO,KAAK;QAAE,aAAa,OAAO,QAAQ;IAAC;AAC7D","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alan/hackathon/fin-assist/src/app/api/voice/turn/route.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\r\nimport { runAgent } from \"@/lib/agent\";\r\nimport { transcribeAudio } from \"@/lib/transcription\";\r\nimport { synthesizeSpeech } from \"@/lib/tts\";\r\n\r\nexport const runtime = \"nodejs\";\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const contentType = req.headers.get(\"content-type\") || \"\";\r\n\r\n    if (!contentType.includes(\"multipart/form-data\")) {\r\n      return new Response(\"Expected multipart/form-data\", { status: 400 });\r\n    }\r\n\r\n    const form = await req.formData();\r\n    const audioFile = form.get(\"audio\") as File | null;\r\n    const voiceId = (form.get(\"voiceId\") as string) || process.env.ELEVENLABS_VOICE_ID || \"\";\r\n    const systemPrompt = (form.get(\"system\") as string) || undefined;\r\n\r\n    if (!audioFile) {\r\n      return new Response(\"Missing audio file in 'audio' field\", { status: 400 });\r\n    }\r\n\r\n    const audioArrayBuffer = await audioFile.arrayBuffer();\r\n    const mimeType = audioFile.type || \"audio/webm\";\r\n\r\n    // 1) STT\r\n    const { text: userText } = await transcribeAudio(audioArrayBuffer, mimeType);\r\n\r\n    // 2) Agent\r\n    const { text: replyText } = await runAgent({ userText, systemPrompt });\r\n\r\n    // 3) TTS\r\n    const { audio, contentType: audioContentType } = await synthesizeSpeech({\r\n      text: replyText,\r\n      voiceId,\r\n    });\r\n\r\n    return new Response(audio, {\r\n      headers: {\r\n        \"content-type\": audioContentType,\r\n        \"x-transcript\": encodeURIComponent(userText),\r\n        \"x-text\": encodeURIComponent(replyText),\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return new Response(\"Internal Server Error\", { status: 500 });\r\n  }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;;;;AAEO,MAAM,UAAU;AAEhB,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,cAAc,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB;QAEvD,IAAI,CAAC,YAAY,QAAQ,CAAC,wBAAwB;YAChD,OAAO,IAAI,SAAS,gCAAgC;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,OAAO,MAAM,IAAI,QAAQ;QAC/B,MAAM,YAAY,KAAK,GAAG,CAAC;QAC3B,MAAM,UAAU,AAAC,KAAK,GAAG,CAAC,cAAyB,QAAQ,GAAG,CAAC,mBAAmB,IAAI;QACtF,MAAM,eAAe,AAAC,KAAK,GAAG,CAAC,aAAwB;QAEvD,IAAI,CAAC,WAAW;YACd,OAAO,IAAI,SAAS,uCAAuC;gBAAE,QAAQ;YAAI;QAC3E;QAEA,MAAM,mBAAmB,MAAM,UAAU,WAAW;QACpD,MAAM,WAAW,UAAU,IAAI,IAAI;QAEnC,SAAS;QACT,MAAM,EAAE,MAAM,QAAQ,EAAE,GAAG,MAAM,IAAA,gJAAe,EAAC,kBAAkB;QAEnE,WAAW;QACX,MAAM,EAAE,MAAM,SAAS,EAAE,GAAG,MAAM,IAAA,iIAAQ,EAAC;YAAE;YAAU;QAAa;QAEpE,SAAS;QACT,MAAM,EAAE,KAAK,EAAE,aAAa,gBAAgB,EAAE,GAAG,MAAM,IAAA,uIAAgB,EAAC;YACtE,MAAM;YACN;QACF;QAEA,OAAO,IAAI,SAAS,OAAO;YACzB,SAAS;gBACP,gBAAgB;gBAChB,gBAAgB,mBAAmB;gBACnC,UAAU,mBAAmB;YAC/B;QACF;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO,IAAI,SAAS,yBAAyB;YAAE,QAAQ;QAAI;IAC7D;AACF","debugId":null}}]
}