{"version":3,"sources":["../../src/voice/generation_tools.test.ts"],"sourcesContent":["// SPDX-FileCopyrightText: 2025 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\nimport { ReadableStream as NodeReadableStream } from 'stream/web';\nimport { describe, expect, it } from 'vitest';\nimport { z } from 'zod';\nimport { FunctionCall, tool } from '../llm/index.js';\nimport { initializeLogger } from '../log.js';\nimport type { Task } from '../utils.js';\nimport { cancelAndWait, delay } from '../utils.js';\nimport { type _TextOut, performTextForwarding, performToolExecutions } from './generation.js';\n\nfunction createStringStream(chunks: string[], delayMs: number = 0): NodeReadableStream<string> {\n  return new NodeReadableStream<string>({\n    async start(controller) {\n      for (const c of chunks) {\n        if (delayMs > 0) {\n          await delay(delayMs);\n        }\n        controller.enqueue(c);\n      }\n      controller.close();\n    },\n  });\n}\n\nfunction createFunctionCallStream(fc: FunctionCall): NodeReadableStream<FunctionCall> {\n  return new NodeReadableStream<FunctionCall>({\n    start(controller) {\n      controller.enqueue(fc);\n      controller.close();\n    },\n  });\n}\n\nfunction createFunctionCallStreamFromArray(fcs: FunctionCall[]): NodeReadableStream<FunctionCall> {\n  return new NodeReadableStream<FunctionCall>({\n    start(controller) {\n      for (const fc of fcs) {\n        controller.enqueue(fc);\n      }\n      controller.close();\n    },\n  });\n}\n\ndescribe('Generation + Tool Execution', () => {\n  initializeLogger({ pretty: false, level: 'silent' });\n\n  it('should not abort tool when preamble forwarders are cleaned up', async () => {\n    const replyAbortController = new AbortController();\n    const forwarderController = new AbortController();\n\n    const chunks = Array.from({ length: 50 }, () => `Hi.`);\n    const fullPreambleText = chunks.join('');\n    const preamble = createStringStream(chunks, 20);\n    const [textForwardTask, textOut]: [Task<void>, _TextOut] = performTextForwarding(\n      preamble,\n      forwarderController,\n      null,\n    );\n\n    // Tool that takes > 5 seconds\n    let toolAborted = false;\n    const getWeather = tool({\n      description: 'weather',\n      parameters: z.object({ location: z.string() }),\n      execute: async ({ location }, { abortSignal }) => {\n        if (abortSignal) {\n          abortSignal.addEventListener('abort', () => {\n            toolAborted = true;\n          });\n        }\n        // 6s delay\n        await delay(6000);\n        return `Sunny in ${location}`;\n      },\n    });\n\n    const fc = FunctionCall.create({\n      callId: 'call_1',\n      name: 'getWeather',\n      args: JSON.stringify({ location: 'San Francisco' }),\n    });\n    const toolCallStream = createFunctionCallStream(fc);\n\n    const [execTask, toolOutput] = performToolExecutions({\n      session: {} as any,\n      speechHandle: { id: 'speech_test', _itemAdded: () => {} } as any,\n      toolCtx: { getWeather } as any,\n      toolCallStream,\n      controller: replyAbortController,\n      onToolExecutionStarted: () => {},\n      onToolExecutionCompleted: () => {},\n    });\n\n    // Ensure tool has started, then cancel forwarders mid-stream (without aborting parent AbortController)\n    await toolOutput.firstToolStartedFuture.await;\n    await delay(100);\n    await cancelAndWait([textForwardTask], 5000);\n\n    await execTask.result;\n\n    expect(toolOutput.output.length).toBe(1);\n    const out = toolOutput.output[0]!;\n    expect(out.toolCallOutput?.isError).toBe(false);\n    expect(out.toolCallOutput?.output).toContain('Sunny in San Francisco');\n    // Forwarder should have been cancelled before finishing all preamble chunks\n    expect(textOut.text).not.toBe(fullPreambleText);\n    // Tool's abort signal must not have fired\n    expect(toolAborted).toBe(false);\n  }, 30_000);\n\n  it('should return basic tool execution output', async () => {\n    const replyAbortController = new AbortController();\n\n    const echo = tool({\n      description: 'echo',\n      parameters: z.object({ msg: z.string() }),\n      execute: async ({ msg }) => `echo: ${msg}`,\n    });\n\n    const fc = FunctionCall.create({\n      callId: 'call_2',\n      name: 'echo',\n      args: JSON.stringify({ msg: 'hello' }),\n    });\n    const toolCallStream = createFunctionCallStream(fc);\n\n    const [execTask, toolOutput] = performToolExecutions({\n      session: {} as any,\n      speechHandle: { id: 'speech_test2', _itemAdded: () => {} } as any,\n      toolCtx: { echo } as any,\n      toolCallStream,\n      controller: replyAbortController,\n    });\n\n    await execTask.result;\n    expect(toolOutput.output.length).toBe(1);\n    const out = toolOutput.output[0];\n    expect(out?.toolCallOutput?.isError).toBe(false);\n    expect(out?.toolCallOutput?.output).toContain('echo: hello');\n  });\n\n  it('should abort tool when reply is aborted mid-execution', async () => {\n    const replyAbortController = new AbortController();\n\n    let aborted = false;\n    const longOp = tool({\n      description: 'longOp',\n      parameters: z.object({ ms: z.number() }),\n      execute: async ({ ms }, { abortSignal }) => {\n        if (abortSignal) {\n          abortSignal.addEventListener('abort', () => {\n            aborted = true;\n          });\n        }\n        await delay(ms);\n        return 'done';\n      },\n    });\n\n    const fc = FunctionCall.create({\n      callId: 'call_abort_1',\n      name: 'longOp',\n      args: JSON.stringify({ ms: 5000 }),\n    });\n    const toolCallStream = createFunctionCallStream(fc);\n\n    const [execTask, toolOutput] = performToolExecutions({\n      session: {} as any,\n      speechHandle: { id: 'speech_abort', _itemAdded: () => {} } as any,\n      toolCtx: { longOp } as any,\n      toolCallStream,\n      controller: replyAbortController,\n    });\n\n    await toolOutput.firstToolStartedFuture.await;\n    replyAbortController.abort();\n    await execTask.result;\n\n    expect(aborted).toBe(true);\n    expect(toolOutput.output.length).toBe(1);\n    const out = toolOutput.output[0];\n    expect(out?.toolCallOutput?.isError).toBe(true);\n  }, 20_000);\n\n  it('should return error output on invalid tool args (zod validation failure)', async () => {\n    const replyAbortController = new AbortController();\n\n    const echo = tool({\n      description: 'echo',\n      parameters: z.object({ msg: z.string() }),\n      execute: async ({ msg }) => `echo: ${msg}`,\n    });\n\n    // invalid: msg should be string\n    const fc = FunctionCall.create({\n      callId: 'call_invalid_args',\n      name: 'echo',\n      args: JSON.stringify({ msg: 123 }),\n    });\n    const toolCallStream = createFunctionCallStream(fc);\n\n    const [execTask, toolOutput] = performToolExecutions({\n      session: {} as any,\n      speechHandle: { id: 'speech_invalid', _itemAdded: () => {} } as any,\n      toolCtx: { echo } as any,\n      toolCallStream,\n      controller: replyAbortController,\n    });\n\n    await execTask.result;\n    expect(toolOutput.output.length).toBe(1);\n    const out = toolOutput.output[0];\n    expect(out?.toolCallOutput?.isError).toBe(true);\n  });\n\n  it('should handle multiple tool calls within a single stream', async () => {\n    const replyAbortController = new AbortController();\n\n    const sum = tool({\n      description: 'sum',\n      parameters: z.object({ a: z.number(), b: z.number() }),\n      execute: async ({ a, b }) => a + b,\n    });\n    const upper = tool({\n      description: 'upper',\n      parameters: z.object({ s: z.string() }),\n      execute: async ({ s }) => s.toUpperCase(),\n    });\n\n    const fc1 = FunctionCall.create({\n      callId: 'call_multi_1',\n      name: 'sum',\n      args: JSON.stringify({ a: 2, b: 3 }),\n    });\n    const fc2 = FunctionCall.create({\n      callId: 'call_multi_2',\n      name: 'upper',\n      args: JSON.stringify({ s: 'hey' }),\n    });\n    const toolCallStream = createFunctionCallStreamFromArray([fc1, fc2]);\n\n    const [execTask, toolOutput] = performToolExecutions({\n      session: {} as any,\n      speechHandle: { id: 'speech_multi', _itemAdded: () => {} } as any,\n      toolCtx: { sum, upper } as any,\n      toolCallStream,\n      controller: replyAbortController,\n    });\n\n    await execTask.result;\n    expect(toolOutput.output.length).toBe(2);\n\n    // sort by callId to assert deterministically\n    const sorted = [...toolOutput.output].sort((a, b) =>\n      a.toolCall.callId.localeCompare(b.toolCall.callId),\n    );\n\n    expect(sorted[0]?.toolCall.name).toBe('sum');\n    expect(sorted[0]?.toolCallOutput?.isError).toBe(false);\n    expect(sorted[0]?.toolCallOutput?.output).toBe('5');\n    expect(sorted[1]?.toolCall.name).toBe('upper');\n    expect(sorted[1]?.toolCallOutput?.isError).toBe(false);\n    expect(sorted[1]?.toolCallOutput?.output).toBe('\"HEY\"');\n  });\n});\n"],"mappings":"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","names":[]}